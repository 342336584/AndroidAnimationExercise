apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

apply plugin: "com.dorongold.task-tree"

def ext = rootProject.ext

android {
    signingConfigs {
        debug {
            keyAlias 'animation'
            keyPassword '123456'
            storeFile file("$rootDir/animationkey")
            storePassword '123456'
        }
    }
    compileSdkVersion ext.compileSdkVersion
    defaultConfig {
        applicationId "home.smart.fly.animations"
        minSdkVersion ext.minSdkVersion
        targetSdkVersion ext.targetSdkVersion
        versionCode 4
        versionName "4.0"
        flavorDimensions "versionCode"
        //blur
        renderscriptTargetApi 19
        renderscriptSupportModeEnabled true

        //
        vectorDrawables.useSupportLibrary true

        //65536
        multiDexEnabled true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // just for study ,without real meaning
    flavorDimensions "default"
    productFlavors {
        free {
            versionNameSuffix "-free"
        }

        charge {
            versionNameSuffix "-charge"
        }
    }

//    android.applicationVariants.all { variant ->
//        println("variant===${variant.name} ${variant.versionName}\n")
//        variant.outputs.all {
//            outputFileName = "animation-${defaultConfig.versionName}-${releaseTime()}-${variant.name}.apk"
//        }
//    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'
    implementation 'com.google.code.gson:gson:2.8.2'
    implementation "com.android.support:appcompat-v7:$ext.support_versioin"
    implementation "com.android.support:design:$ext.support_versioin"
    implementation 'com.orhanobut:logger:2.1.1'
    implementation 'org.greenrobot:eventbus:3.0.0'
    implementation 'de.hdodenhof:circleimageview:3.0.0'
    implementation "com.android.support:support-v4:$ext.support_versioin"
    implementation "com.android.support:cardview-v7:$ext.support_versioin"
    implementation "com.github.bumptech.glide:glide:$ext.glide"
    implementation 'com.squareup.okhttp3:okhttp:3.11.0'
    implementation 'com.squareup.okio:okio:1.14.1'
    implementation 'com.android.support:multidex:1.0.3'
    implementation "com.android.support:support-vector-drawable:$ext.support_versioin"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'cn.bingoogolapple:bga-refreshlayout:1.1.8@aar'
    implementation 'cn.bingoogolapple:bga-banner:2.2.4@aar'
    implementation 'cn.bingoogolapple:bga-adapter:1.1.8@aar'
    implementation 'com.jakewharton:butterknife:8.8.1'
    kapt 'com.jakewharton:butterknife-compiler:8.8.1'
    testImplementation 'junit:junit:4.12'
    implementation 'com.facebook.stetho:stetho:1.5.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "com.android.support:support-dynamic-animation:$support_versioin"
    implementation 'com.airbnb.android:lottie:2.5.1'
    implementation 'com.davemorrissey.labs:subsampling-scale-image-view:3.10.0'
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$ext.leakcanary"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$ext.leakcanary"
    debugImplementation "com.squareup.leakcanary:leakcanary-support-fragment:$ext.leakcanary"
    if (!imitate_isApp.toBoolean()) {
        implementation project(':imitate')
    }
    implementation 'net.sourceforge.streamsupport:streamsupport:1.6.3'
    implementation "com.alibaba:arouter-api:$ext.arouter_api"
    kapt "com.alibaba:arouter-compiler:$ext.arouter_compiler"
    testImplementation 'org.robolectric:robolectric:4.1'
    kapt 'com.zhihu.android:sugaradapter-processor:1.7.9'
    implementation "com.android.support:palette-v7:$support_versioin"

    implementation 'jp.wasabeef:takt:2.0.0'
}

ext.allDependencies.each {
    dependencies.add('implementation', it)
}


repositories {
    mavenCentral()
}

static def releaseTime() {
    return new Date().format("yyyy-MM-dd HH:mm", TimeZone.getTimeZone("GMT+08:00"))
}

def getGitCommit() {
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine "git"
        args "rev-parse", "--short", "HEAD"
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

def getGitBranch() {
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine "git"
        args "rev-parse", "--abbrev-ref", "HEAD"
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

// just for study 修改 app 的输出目录到 destDir 指定目录

//apply plugin: ApkDistPlugin
//
//apkconfig {
//    println "apk dist   into: " + rootDir.toString() + File.separator + apkDir
//    println "git commit info: " + getGitCommit()
//    println "git branch info: " + getGitBranch()
//
//    nameMap { name ->
//        println '应用名称:' + name
//        return name
//    }
//    destDir apkDir
//}

